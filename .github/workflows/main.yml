name: main

on:
  push:
    branches:
      - "**"

env:
  NEXT_TELEMETRY_DISABLED: 1 # https://nextjs.org/telemetry

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build_website:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/dependencies

      - name: Build home
        run: |
          pnpm build home

      - name: Build editor playground
        run: |
          pnpm build playground

      - name: Upload dist (home)
        uses: actions/upload-artifact@v3
        with:
          name: home_dist
          path: ./packages/home/dist

      - name: Upload dist (editor playground)
        uses: actions/upload-artifact@v3
        with:
          name: editor_playground_dist
          path: ./packages/playground/dist

  build_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/dependencies

      - name: Build packages
        run: |
          pnpm build electron-renderer electron-main electron-preload common editor

  build_electron:
    strategy:
      matrix:
        electron_build_command:
          - build:win
          - build:mac
          - build:linux
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/dependencies

      - name: Get current electron app version
        run: |
          RINO_APP_VERSION="v$(cat packages/electron/package.json | jq '.version' --join-output)"
          echo "Current app version is $RINO_APP_VERSION"
          echo "RINO_APP_VERSION=$RINO_APP_VERSION" >> $GITHUB_ENV

      - name: Create draft GitHub release
        uses: softprops/action-gh-release@v1
        if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/changeset-release/master' }}
        with:
          draft: true
          prerelease: false
          name: "${{ env.RINO_APP_VERSION }}"
          tag_name: "${{ env.RINO_APP_VERSION }}"
          append_body: false

      - name: Build electron and upload to GitHub release if necessary
        run: |
          alias build_command="pnpm turbo run ${{ matrix.electron_build_command }} --filter='electron'"
          echo "build_command: ${build_command}"
          (echo "==== Attempt: 1 ====" && build_command) || \
          (echo "==== Attempt: 2 ====" && build_command) || \
          (echo "==== Attempt: 3 ====" && build_command) || \
          (echo "====== Failed ======" && exit 1)
        env:
          ELECTRON_APPLE_ID_NAME: ${{ secrets.ELECTRON_APPLE_ID_NAME }}
          ELECTRON_APPLE_ID: ${{ secrets.ELECTRON_APPLE_ID }}
          ELECTRON_APPLE_ID_PASSWORD: ${{ secrets.ELECTRON_APPLE_ID_PASSWORD }}
          CSC_LINK: ${{ secrets.ELECTRON_MAC_P12_BASE64 }}
          CSC_KEY_PASSWORD: ${{ secrets.ELECTRON_MAC_P12_PASSWORD }}
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/dependencies

      - name: Run vitest
        run: |
          pnpm test:coverage

      - name: Upload coverage information to codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/coverage-final.json
          fail_ci_if_error: true # Specify if CI pipeline should fail when Codecov runs into errors during upload. Defaults to false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/dependencies

      - name: Lint
        run: pnpm lint .

      - name: Check typescript types
        run: pnpm typecheck

  preview: # Preview deployment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/dependencies

      - name: Build home
        run: |
          pnpm build home

      - name: Build editor playground
        run: |
          pnpm build playground

      - id: step_branch
        name: Get the branch name
        run: |
          echo "::set-output name=branch::$(node scripts/slugify-branch.js)"

      - id: step_vercel_home
        name: Deploy @rino.app/home to Vercel
        # Vercel only allows a free account to deploy 100 times every day so this step could fail
        continue-on-error: true
        timeout-minutes: 10
        uses: amondnet/vercel-action@v25
        with:
          github-comment: false
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_HOME }}
          alias-domains: rino-home-${{ steps.step_branch.outputs.branch }}.ocavue.vercel.app
          vercel-args: "--meta TYPE=PREVIEW"
          working-directory: "./packages/home/dist/"

      - id: step_vercel_editor
        name: Deploy @rino.app/editor to Vercel
        continue-on-error: true
        timeout-minutes: 10
        uses: amondnet/vercel-action@v25
        with:
          github-comment: false
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_EDITOR }}
          alias-domains: rino-editor-${{ steps.step_branch.outputs.branch }}.ocavue.vercel.app
          vercel-args: "--meta TYPE=PREVIEW"
          working-directory: "./packages/playground/dist/"

      - id: step_find_pr
        uses: jwalton/gh-find-current-pr@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ steps.step_find_pr.outcome == 'success' }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.step_find_pr.outputs.pr }}
          message: |
            ## Preview Deployment ${{ github.sha }}:
            ### Home
            - Status: ***${{ steps.step_vercel_home.outcome }}***
            - URL: https://rino-home-${{ steps.step_branch.outputs.branch }}.ocavue.vercel.app
            ### Editor playground
            - Status: ***${{ steps.step_vercel_editor.outcome }}***
            - URL: https://rino-editor-${{ steps.step_branch.outputs.branch }}.ocavue.vercel.app

      - name: Generate configrations for Lighthouse CI
        run: node scripts/generate-lighthouserc.js
        if: steps.step_vercel_home.outcome == 'success'

      - name: Run lighthouse
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }} # Install this GitHub App and get the token: https://github.com/apps/lighthouse-ci
        run: |
          export PATH="$PATH:$PWD/packages/rig/node_modules/.bin"
          lhci autorun --config .lighthouserc.home.json
        if: steps.step_vercel_home.outcome == 'success'

  release:
    runs-on: ubuntu-latest
    needs:
      - build_website
      - build_package
      - build_electron
      - test
      - lint
      - preview
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.RELEASE_PLEASE_GITHUB_TOKEN }}

      - uses: ./.github/actions/dependencies

      - id: step_changeset
        name: Create Release Pull Request or Publish to npm
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
          commit: "chore: version packages"
          title: "chore: version packages"
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    outputs:
      published: ${{ steps.step_changeset.outputs.published }}

  deploy: # Production deployment
    runs-on: ubuntu-latest
    needs:
      # make sure that `deploy` only depends on `release` because we don't want `deploy` to skip if `release` succeeded.
      - release
    steps:
      - uses: actions/checkout@v3

      - name: Download dist (home)
        uses: actions/download-artifact@v3
        with:
          name: home_dist
          path: ./packages/home/dist

      - name: Download dist (playground)
        uses: actions/download-artifact@v3
        with:
          name: editor_playground_dist
          path: ./packages/playground/dist

      - id: step_vercel_home
        name: Deploy @rino.app/home to Vercel
        timeout-minutes: 10
        uses: amondnet/vercel-action@v25
        with:
          github-comment: false
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_HOME }}
          alias-domains: rino-home-master.ocavue.vercel.app
          vercel-args: "--prod --meta TYPE=PRODUCTION"
          working-directory: "./packages/home/dist/"

      - id: step_vercel_editor
        name: Deploy @rino.app/editor to Vercel
        timeout-minutes: 10
        uses: amondnet/vercel-action@v25
        with:
          github-comment: false
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_EDITOR }}
          alias-domains: rino-editor-master.ocavue.vercel.app
          vercel-args: "--prod --meta TYPE=PRODUCTION"
          working-directory: "./packages/playground/dist/"
