{
  "name": "main",
  "on": {
    "push": {
      "branches": [
        "**"
      ]
    }
  },
  "env": {
    "NEXT_TELEMETRY_DISABLED": 1
  },
  "jobs": {
    "build_website": {
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 16
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.pnpm-store\n~/cache_electron\n~/cache_electron_builder\n~/cache_playwright_browsers\n",
            "key": "${{ runner.os }}-deps-v22-${{ hashFiles('pnpm-lock.yaml') }}",
            "restore-keys": "${{ runner.os }}-deps-v22-\n"
          }
        },
        {
          "name": "Install dependencies",
          "uses": "./.github/actions/dependencies"
        },
        {
          "name": "Build website",
          "run": "ultra exec home build\n"
        },
        {
          "name": "Upload dist (home)",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "home_dist",
            "path": "./packages/home/dist"
          }
        }
      ]
    },
    "build_electron": {
      "runs-on": "macos-10.15",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 16
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.pnpm-store\n~/cache_electron\n~/cache_electron_builder\n~/cache_playwright_browsers\n",
            "key": "${{ runner.os }}-deps-v22-${{ hashFiles('pnpm-lock.yaml') }}",
            "restore-keys": "${{ runner.os }}-deps-v22-\n"
          }
        },
        {
          "name": "Install dependencies",
          "uses": "./.github/actions/dependencies"
        },
        {
          "name": "Update package.json",
          "run": "version=$(cat version.txt)\npkgjson=$(jq \".version = \\\"$version\\\"\" ./packages/electron/package.json)\necho \"$pkgjson\" > ./packages/electron/package.json\ncat ./packages/electron/package.json\n"
        },
        {
          "name": "Build dependencies",
          "run": "pnpm --filter '@rino.app/electron-*' build\n"
        },
        {
          "name": "Build electron",
          "run": "pnpm --filter '@rino.app/electron' build:all\n",
          "env": {
            "ELECTRON_APPLE_ID_NAME": "${{ secrets.ELECTRON_APPLE_ID_NAME }}",
            "ELECTRON_APPLE_ID": "${{ secrets.ELECTRON_APPLE_ID }}",
            "ELECTRON_APPLE_ID_PASSWORD": "${{ secrets.ELECTRON_APPLE_ID_PASSWORD }}",
            "CSC_LINK": "${{ secrets.ELECTRON_MAC_P12_BASE64 }}",
            "CSC_KEY_PASSWORD": "${{ secrets.ELECTRON_MAC_P12_PASSWORD }}"
          }
        },
        {
          "name": "Clean electron dist",
          "run": "cd packages/electron\necho '============== before cleaning =============='\nfind ./dist -type f\necho '============== cleaning ====================='\nrm -rf ./dist/*/\necho '============== after cleaning ==============='\nfind ./dist -type f\n"
        },
        {
          "name": "Upload dist (electron)",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "electron_dist",
            "path": "./packages/electron/dist"
          }
        },
        {
          "name": "Upload dist (electron dmg)",
          "uses": "actions/upload-artifact@v2",
          "if": "contains(github.event.head_commit.message, 'UPLOAD_DMG')",
          "with": {
            "name": "electron_dist_dmg",
            "path": "./packages/electron/dist/*.dmg"
          }
        }
      ]
    },
    "test": {
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 16
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.pnpm-store\n~/cache_electron\n~/cache_electron_builder\n~/cache_playwright_browsers\n",
            "key": "${{ runner.os }}-deps-v22-${{ hashFiles('pnpm-lock.yaml') }}",
            "restore-keys": "${{ runner.os }}-deps-v22-\n"
          }
        },
        {
          "name": "Install dependencies",
          "uses": "./.github/actions/dependencies"
        },
        {
          "name": "Build dependencies",
          "env": {
            "REACT_APP_TEST_USERNAME": "${{ secrets.REACT_APP_TEST_USERNAME }}",
            "REACT_APP_TEST_PASSWORD": "${{ secrets.REACT_APP_TEST_PASSWORD }}",
            "REACT_APP_TESTING": 1
          },
          "run": "pnpm --filter @rino.app/common build\n"
        },
        {
          "name": "Run tests",
          "env": {
            "FIREBASE_TOKEN": "${{ secrets.FIREBASE_TOKEN }}",
            "REACT_APP_TEST_USERNAME": "${{ secrets.REACT_APP_TEST_USERNAME }}",
            "REACT_APP_TEST_PASSWORD": "${{ secrets.REACT_APP_TEST_PASSWORD }}"
          },
          "run": "ultra test --coverage\n"
        },
        {
          "name": "Upload coverage information to codecov",
          "uses": "codecov/codecov-action@v1",
          "with": {
            "file": "./coverage/coverage-final.json",
            "fail_ci_if_error": false
          }
        }
      ]
    },
    "lint": {
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 16
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.pnpm-store\n~/cache_electron\n~/cache_electron_builder\n~/cache_playwright_browsers\n",
            "key": "${{ runner.os }}-deps-v22-${{ hashFiles('pnpm-lock.yaml') }}",
            "restore-keys": "${{ runner.os }}-deps-v22-\n"
          }
        },
        {
          "name": "Install dependencies",
          "uses": "./.github/actions/dependencies"
        },
        {
          "name": "Lint",
          "run": "ultra lint ."
        },
        {
          "name": "Check actions configration",
          "run": "hash1=$(sha1sum .github/workflows/main.yml)\n./node_modules/.bin/js-yaml .github/temp/main.yml > .github/workflows/main.yml\nhash2=$(sha1sum .github/workflows/main.yml)\necho \"$hash1\" \"$hash2\"\nif [ \"$hash1\" != \"$hash2\" ]; then exit 1; fi\n"
        }
      ]
    },
    "preview": {
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 16
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "~/.pnpm-store\n~/cache_electron\n~/cache_electron_builder\n~/cache_playwright_browsers\n",
            "key": "${{ runner.os }}-deps-v22-${{ hashFiles('pnpm-lock.yaml') }}",
            "restore-keys": "${{ runner.os }}-deps-v22-\n"
          }
        },
        {
          "name": "Install dependencies",
          "uses": "./.github/actions/dependencies"
        },
        {
          "name": "Build",
          "run": "ultra exec home build\n"
        },
        {
          "id": "step_branch",
          "name": "Get the branch name",
          "run": "echo \"::set-output name=branch::$(node scripts/slugify-branch.js)\"\n"
        },
        {
          "id": "step_vercel",
          "name": "Deploy @rino.app/home to Vercel",
          "uses": "amondnet/vercel-action@v20",
          "timeout-minutes": 10,
          "with": {
            "github-comment": false,
            "vercel-token": "${{ secrets.VERCEL_TOKEN }}",
            "github-token": "${{ secrets.GITHUB_TOKEN }}",
            "vercel-org-id": "${{ secrets.VERCEL_ORG_ID }}",
            "vercel-project-id": "${{ secrets.VERCEL_PROJECT_ID_HOME }}",
            "alias-domains": "rino-home-${{ steps.step_branch.outputs.branch }}.ocavue.vercel.app",
            "vercel-args": "--meta TYPE=PREVIEW",
            "working-directory": "./packages/home/"
          },
          "continue-on-error": true
        },
        {
          "id": "step_find_pr",
          "uses": "jwalton/gh-find-current-pr@v1",
          "with": {
            "github-token": "${{ secrets.GITHUB_TOKEN }}"
          },
          "continue-on-error": true
        },
        {
          "uses": "marocchino/sticky-pull-request-comment@v2",
          "with": {
            "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
            "number": "${{ steps.step_find_pr.outputs.pr }}",
            "message": "## Preview Deployment\n${{ github.sha }}:\n- https://rino-home-${{ steps.step_branch.outputs.branch }}.ocavue.vercel.app\n"
          },
          "continue-on-error": true
        },
        {
          "name": "Generate configrations for Lighthouse CI",
          "run": "node scripts/generate-lighthouserc.js",
          "if": "steps.step_vercel.outcome == 'success'"
        },
        {
          "name": "Run lighthouse",
          "env": {
            "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
            "LHCI_GITHUB_APP_TOKEN": "${{ secrets.LHCI_GITHUB_APP_TOKEN }}"
          },
          "run": "ultra lhci autorun --config .lighthouserc.home.json\n",
          "if": "steps.step_vercel.outcome == 'success'"
        }
      ]
    },
    "release": {
      "runs-on": "ubuntu-latest",
      "needs": [
        "build_website",
        "build_electron",
        "test",
        "lint",
        "preview"
      ],
      "if": "github.ref == 'refs/heads/master'",
      "steps": [
        {
          "id": "step_release_please",
          "uses": "GoogleCloudPlatform/release-please-action@v2",
          "with": {
            "token": "${{ secrets.RELEASE_PLEASE_GITHUB_TOKEN }}",
            "release-type": "simple"
          }
        }
      ],
      "outputs": {
        "published": "${{ steps.step_release_please.outputs.release_created }}",
        "tag_name": "${{ steps.step_release_please.outputs.tag_name }}"
      }
    },
    "deploy": {
      "runs-on": "ubuntu-latest",
      "needs": [
        "release"
      ],
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 16
          }
        },
        {
          "name": "Download dist (electron)",
          "uses": "actions/download-artifact@v2",
          "if": "github.ref == 'refs/heads/master' && needs.release.outputs.published == 'true'",
          "with": {
            "name": "electron_dist",
            "path": "./packages/electron/dist"
          }
        },
        {
          "name": "Upload @rino.app/electron to GitHub Release",
          "uses": "svenstaro/upload-release-action@v2",
          "if": "github.ref == 'refs/heads/master' && needs.release.outputs.published == 'true'",
          "with": {
            "repo_token": "${{ secrets.GITHUB_TOKEN }}",
            "file": "./packages/electron/dist/*",
            "tag": "${{ needs.release.outputs.tag_name }}",
            "overwrite": true,
            "file_glob": true
          }
        },
        {
          "name": "Download dist (home)",
          "uses": "actions/download-artifact@v2",
          "with": {
            "name": "home_dist",
            "path": "./packages/home/dist"
          }
        },
        {
          "name": "Deploy @rino.app/home to Vercel",
          "uses": "amondnet/vercel-action@v20",
          "with": {
            "github-comment": false,
            "vercel-token": "${{ secrets.VERCEL_TOKEN }}",
            "github-token": "${{ secrets.GITHUB_TOKEN }}",
            "vercel-org-id": "${{ secrets.VERCEL_ORG_ID }}",
            "vercel-project-id": "${{ secrets.VERCEL_PROJECT_ID_HOME }}",
            "alias-domains": "rino-home-master.ocavue.vercel.app",
            "vercel-args": "--prod --meta TYPE=PRODUCTION",
            "working-directory": "./packages/home/"
          }
        }
      ]
    }
  }
}
