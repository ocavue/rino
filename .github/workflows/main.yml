{
  "name": "main",
  "on": {
    "push": {
      "branches": [
        "**"
      ]
    }
  },
  "env": {
    "NEXT_TELEMETRY_DISABLED": 1
  },
  "jobs": {
    "Build": {
      "runs-on": "ubuntu-18.04",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 14
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "node_modules\n*/*/node_modules\n~/.cache/firebase\n~/.cache/ms-playwright\n.yarn/cache\n",
            "key": "${{ runner.os }}-deps-v5-${{ hashFiles('yarn.lock') }}"
          }
        },
        {
          "name": "Install Dependencies",
          "run": "date\nyarn install --immutable\ndate\necho \"[DEBUG] CACHE_HIT: $CACHE_HIT\"\nif [ \"$CACHE_HIT\" != \"true\" ]\nthen\n  echo \"[DEBUG] installing\"\n  yarn run web firebase setup:emulators:firestore\nfi\nls -lrth ~/.cache/firebase/emulators/\n",
          "env": {
            "CACHE_HIT": "${{ steps.step_cache_deps.outputs.cache-hit }}"
          }
        },
        {
          "name": "Configrate firebase",
          "env": {
            "FIREBASE_CLIENT_JSON": "${{ secrets.FIREBASE_CLIENT_JSON }}",
            "FIREBASE_TOKEN": "${{ secrets.FIREBASE_TOKEN }}"
          },
          "run": "echo \"${FIREBASE_CLIENT_JSON}\" > ./packages/web/config/firebase.client.json\nexport FIREBASE_PROJECT_ID=$(scripts/simple_jq.js ./packages/web/config/firebase.client.json .projectId)\nyarn run web firebase use --add $FIREBASE_PROJECT_ID\n"
        },
        {
          "name": "Build",
          "run": "yarn run build:web\n"
        },
        {
          "name": "Upload dist (web)",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "web_dist",
            "path": "./packages/web/dist"
          }
        },
        {
          "name": "Upload dist (home)",
          "uses": "actions/upload-artifact@v2",
          "with": {
            "name": "home_dist",
            "path": "./packages/home/dist"
          }
        }
      ]
    },
    "Test": {
      "runs-on": "ubuntu-18.04",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        }
      ]
    },
    "Lint": {
      "runs-on": "ubuntu-18.04",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        }
      ]
    },
    "Preview": {
      "runs-on": "ubuntu-18.04",
      "needs": [
        "Build"
      ],
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 14
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "node_modules\n*/*/node_modules\n~/.cache/firebase\n~/.cache/ms-playwright\n.yarn/cache\n",
            "key": "${{ runner.os }}-deps-v5-${{ hashFiles('yarn.lock') }}"
          }
        },
        {
          "name": "Install Dependencies",
          "run": "date\nyarn install --immutable\ndate\necho \"[DEBUG] CACHE_HIT: $CACHE_HIT\"\nif [ \"$CACHE_HIT\" != \"true\" ]\nthen\n  echo \"[DEBUG] installing\"\n  yarn run web firebase setup:emulators:firestore\nfi\nls -lrth ~/.cache/firebase/emulators/\n",
          "env": {
            "CACHE_HIT": "${{ steps.step_cache_deps.outputs.cache-hit }}"
          }
        },
        {
          "name": "Download dist (web)",
          "uses": "actions/download-artifact@v2",
          "with": {
            "name": "web_dist",
            "path": "./packages/web/dist"
          }
        },
        {
          "name": "Download dist (home)",
          "uses": "actions/download-artifact@v2",
          "with": {
            "name": "home_dist",
            "path": "./packages/home/dist"
          }
        }
      ]
    },
    "Release": {
      "runs-on": "ubuntu-18.04",
      "needs": [
        "Build",
        "Test",
        "Lint",
        "Preview"
      ],
      "if": "github.ref == 'refs/heads/master'",
      "steps": [
        {
          "id": "step_release_please",
          "uses": "GoogleCloudPlatform/release-please-action@v2",
          "with": {
            "token": "${{ secrets.CHANGESET_GITHUB_TOKEN }}",
            "release-type": "node"
          }
        }
      ],
      "outputs": {
        "published": "${{ steps.step_release_please.outputs.release_created }}"
      }
    },
    "Deployment": {
      "runs-on": "ubuntu-18.04",
      "needs": [
        "Release"
      ],
      "if": "github.ref == 'refs/heads/master' && ( needs.Release.outputs.published == 'true' || contains(github.event.head_commit.message, '[force-deploy]') )",
      "steps": [
        {
          "name": "Checkout code repository",
          "uses": "actions/checkout@v2"
        },
        {
          "name": "Setup node.js",
          "uses": "actions/setup-node@v2",
          "with": {
            "node-version": 14
          }
        },
        {
          "id": "step_cache_deps",
          "name": "Cache dependencies",
          "uses": "actions/cache@v2",
          "with": {
            "path": "node_modules\n*/*/node_modules\n~/.cache/firebase\n~/.cache/ms-playwright\n.yarn/cache\n",
            "key": "${{ runner.os }}-deps-v5-${{ hashFiles('yarn.lock') }}"
          }
        },
        {
          "name": "Install Dependencies",
          "run": "date\nyarn install --immutable\ndate\necho \"[DEBUG] CACHE_HIT: $CACHE_HIT\"\nif [ \"$CACHE_HIT\" != \"true\" ]\nthen\n  echo \"[DEBUG] installing\"\n  yarn run web firebase setup:emulators:firestore\nfi\nls -lrth ~/.cache/firebase/emulators/\n",
          "env": {
            "CACHE_HIT": "${{ steps.step_cache_deps.outputs.cache-hit }}"
          }
        },
        {
          "name": "Download dist (web)",
          "uses": "actions/download-artifact@v2",
          "with": {
            "name": "web_dist",
            "path": "./packages/web/dist"
          }
        },
        {
          "name": "Download dist (home)",
          "uses": "actions/download-artifact@v2",
          "with": {
            "name": "home_dist",
            "path": "./packages/home/dist"
          }
        },
        {
          "name": "Configrate firebase",
          "env": {
            "FIREBASE_CLIENT_JSON": "${{ secrets.FIREBASE_CLIENT_JSON }}",
            "FIREBASE_TOKEN": "${{ secrets.FIREBASE_TOKEN }}"
          },
          "run": "echo \"${FIREBASE_CLIENT_JSON}\" > ./packages/web/config/firebase.client.json\nexport FIREBASE_PROJECT_ID=$(scripts/simple_jq.js ./packages/web/config/firebase.client.json .projectId)\nyarn run web firebase use --add $FIREBASE_PROJECT_ID\n"
        },
        {
          "name": "Update package.json",
          "run": "version=$(jq '.version' ./package.json)\npkgjson=$(jq \".version = $version\" ./packages/electron/package.json)\necho \"$pkgjson\" > ./packages/electron/package.json\ncat ./packages/electron/package.json\n"
        },
        {
          "name": "Upload @rino.app/electron to GitHub Release",
          "run": "yarn run electron release\n"
        }
      ]
    }
  }
}
