version: 2.1

workflows:
  version: 2
  main_workflow:
    jobs:
      - test:
          # `filters` is required since `deploy` has tag filters AND requires `test`
          filters: &default_filters
            tags:
              only: /.*/
            branches:
              only: /.*/
      - build:
          filters: *default_filters
      - lint:
          filters: *default_filters
      - deploy_test:
          requires:
            - build

executors:
  node-executor:
    docker:
      - image: circleci/node:12-stretch-browsers
    environment:
      NEXT_TELEMETRY_DISABLED: "1"

commands:
  install:
    steps:
      - checkout
      - restore_cache:
          key: &cache_key v0-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
            - .next/cache # https://err.sh/next.js/no-cache
          key: *cache_key

jobs:
  lint:
    executor: node-executor
    steps:
      - install
      - run: yarn run lint
  test:
    executor: node-executor
    steps:
      - install
      - run: |
          echo ${DEV_CONFIG_FIREBASE} > ./config/firebase.json
      # - run: |
      #     export REACT_APP_TESTING=1
      #     yarn build
      #     yarn export
      # - run: |
      #     ./scripts/http-server.js > /dev/null &
      #     yarn run test --coverage
      # - run: |
      #     yarn run coverage
  build:
    executor: node-executor
    steps:
      - install
      - run: echo ${PROD_CONFIG_FIREBASE} > ./config/firebase.json
      - run: yarn run build
      - run: yarn run export
      # Create CNAME file AFTER `yarn build`, so that workbox woundn't add `CNAME`
      # into `dist/precache-manifest.xx.js`.
      # The server-worker won't be able to install successfully otherwise because
      # GitHub will return 404 when requesting `rino.app/CNAME`.
      - run: |
          mkdir -p /tmp/deploy
          cp -r ./dist/* /tmp/deploy
      - persist_to_workspace:
          root: /tmp/deploy
          paths:
            - .
  deploy_test:
    executor: node-executor
    steps:
      - install
      - attach_workspace:
          at: /tmp/deploy
      - run: >
          yarn netlify deploy
          --dir /tmp/deploy/
          --message "Deployment from Circle CI. Ref: $(git rev-parse --abbrev-ref HEAD). Commit: $(git rev-parse --short HEAD)."
  # check_version:
  #   docker:
  #     - image: python:3.7-stretch
  #   steps:
  #     - checkout
  #     - run: |
  #         ./scripts/verify-version.py
  # deploy(prod):
  #   docker:
  #     - image: python:3.7-stretch
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /tmp/deploy
  #     - run: |
  #         git config --global user.email "ci@circleci.com"
  #         git config --global user.name "circleci"
  #         git clone -q ${DEPLOY_REPO_URL} ~/deploy
  #     - run: |
  #         cd ~/deploy
  #         rm -rf ./*
  #         cp -r /tmp/deploy/. ~/deploy/
  #     # Make sure that some important files exist
  #     - run: |
  #         cd ~/deploy
  #         cat index.html > /dev/null
  #         cat 404.html > /dev/null
  #         cat .nojekyll > /dev/null
  #     - run: |
  #         cd ~/deploy
  #         git add --all
  #         git commit -m "[$(date '+%Y-%m-%d %H:%M:%S %z')] $CIRCLE_TAG $(cat /tmp/deploy/git_commit_sha)"
  #         git push -q
