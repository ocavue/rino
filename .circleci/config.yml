version: 2.1

workflows:
  version: 2
  main_workflow:
    jobs:
      - test
      - build
      - lint
      - deploy:
          requires:
            - test
            - build
            - lint
          filters:
            branches:
              only:
                - master
      - regenerate_yarn_lock:
          filters:
            branches:
              only:
                - yarn_upgrade

executors:
  node-executor:
    docker:
      - image: circleci/node:12-stretch-browsers

commands:
  install:
    steps:
      - checkout
      - restore_cache:
          key: &cache_key v8-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: *cache_key

jobs:
  lint:
    executor: node-executor
    steps:
      - install
      - run: yarn run lint
  test:
    executor: node-executor
    steps:
      - install
      - run: |
          echo ${DEV_CONFIG_FIREBASE} > ./config/firebase.json
          echo "VUE_APP_TEST_USERNAME=${VUE_APP_TEST_USERNAME}" >> ./.env
          echo "VUE_APP_TEST_PASSWORD=${VUE_APP_TEST_PASSWORD}" >> ./.env
      - run: yarn build --mode development
      - run: |
          ./scripts/http-server.js > /dev/null &
          yarn run test --coverage
      - run: yarn run coverage
  build:
    executor: node-executor
    steps:
      - install
      - run: echo ${PROD_CONFIG_FIREBASE} > ./config/firebase.json
      - run: yarn run build --no-source-maps
      # Create CNAME file AFTER `yarn build`, so that workbox woundn't add `CNAME`
      # into `dist/precache-manifest.xx.js`.
      # The server-worker won't be able to install successfully otherwise because
      # GitHub will return 404 when requesting `rino.app/CNAME`.
      - run: |
          mkdir -p /tmp/deploy
          cp -r ./dist/* /tmp/deploy
          echo "<!-- $(date '+%Y-%m-%d %H:%M:%S %z') -->" >> /tmp/deploy/index.html
          echo "rino.app" >  /tmp/deploy/CNAME
          cp /tmp/deploy/index.html /tmp/deploy/404.html
          echo "$(git rev-parse --short HEAD)" > /tmp/deploy/git_commit_sha
      - persist_to_workspace:
          root: /tmp/deploy
          paths:
            - .
  deploy:
    executor: node-executor
    steps:
      - attach_workspace:
          at: /tmp/deploy
      - run: |
          git config --global user.email "ci@circleci.com"
          git config --global user.name "circleci"
          git clone -q ${DEPLOY_REPO_URL} ~/deploy
          cd ~/deploy
          rm -rf ./*
          cp -r /tmp/deploy/* ~/deploy
          git add --all
          git commit -m "[$(date '+%Y-%m-%d %H:%M:%S %z')] $(cat /tmp/deploy/git_commit_sha)"
          git push -q
  regenerate_yarn_lock:
    executor: node-executor
    steps:
      - checkout
      - run: |
          touch yarn.lock && rm yarn.lock
          mkdir -p node_modules && rm -rf node_modules
          yarn install
          zip yarn.lock.zip yarn.lock
      - store_artifacts:
          path: ./yarn.lock.zip
